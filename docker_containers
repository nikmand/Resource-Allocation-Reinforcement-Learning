{
'in-memory': ('zilutian/in-memory-analytics:amd64', '/data/ml-latest /data/myratings.csv --driver-memory 6g --executor-memory 16g', 'data'),
'in-memory-small': ('zilutian/in-memory-analytics:amd64', '/data/ml-latest-small /data/myratings.csv', 'data'),
'graphs': ('cloudsuite/graph-analytics', '--driver-memory 6g --executor-memory 16g', 'data-twitter'),
'pi' : ('nikmand/bes:spark-example', 'SparkPi 1000000', None),
'word-count': ('nikmand/bes:spark-example', '--driver-memory 6g --executor-memory 16g JavaWordCount /data/ml-latest/ratings.csv', 'data'),
'DecisionTreeClassification': ('nikmand/bes:spark-example', 'ml.JavaDecisionTreeClassificationExample', 'data-svm'),
'DecisionTreeRegression': ('nikmand/bes:spark-example', 'ml.JavaDecisionTreeRegressionExample', 'data-svm'),
'GradientBoostedTreeClassifier': ('nikmand/bes:spark-example', 'ml.JavaGradientBoostedTreeClassifierExample', 'data-svm'),
'GradientBoostedTreeRegressor': ('nikmand/bes:spark-example', 'ml.JavaGradientBoostedTreeRegressorExample', 'data-svm'),
'LinearSVC': ('nikmand/bes:spark-example', 'ml.JavaLinearSVCExample', 'data-svm'),
'LogisticRegressionSummary': ('nikmand/bes:spark-example', 'ml.JavaLogisticRegressionSummaryExample', 'data-svm'),
'LogisticRegressionWithElasticNet': ('nikmand/bes:spark-example', 'ml.JavaLogisticRegressionWithElasticNetExample', 'data-svm'),
'NaiveBayesExample': ('nikmand/bes:spark-example', 'ml.JavaNaiveBayesExample', 'data-svm'),
'RandomForestClassifier': ('nikmand/bes:spark-example', 'ml.JavaRandomForestClassifierExample', 'data-svm'),
'RandomForestRegressor': ('nikmand/bes:spark-example', 'ml.JavaRandomForestRegressorExample', 'data-svm'),
'StandardScaler': ('nikmand/bes:spark-example', 'ml.JavaStandardScalerExample', 'data-svm'),
'VectorIndexer': ('nikmand/bes:spark-example', 'ml.JavaVectorIndexerExample', 'data-svm'),
}

